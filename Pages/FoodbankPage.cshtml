@page "{id:int}"
@model FoodbankPageModel
@{
    ViewData["Title"] = "Foodbank Page";
}
<link rel="stylesheet" href="~/css/Control.Geocoder.css"/>
<link rel="stylesheet" href="https://unpkg.com/leaflet@latest/dist/leaflet.css"/>


<script src="https://unpkg.com/leaflet@latest/dist/leaflet-src.js"></script>
<script src="~/js/Control.Geocoder.js"></script>

<div class="text-center ">
    <p>
        Disclaimer: Vouchers may be required to access the bank. <a href="/GetHelp">Learn more here.</a>
    </p>
</div>

<form method="post">
    <div class="text-center">
        <h1 class="display-4"><b>Name: </b>@Html.DisplayFor(modelItem => modelItem.Location.Name)</h1>
    </div>

    <div class="row">
        <div class="container mt-2">
            <div class="row">
                <div class="col-sm-4">
                    <h3>name and address</h3>
                    <p class="text-box">Address: foodbank@email.com <br/> 
                                        Country: foodbank@email.com <br/>
                                        Postcode: foodbank@email.com <br/> </p>
                </div>
                <div class="col-sm-4">
                    <h3>Contact Infomation</h3>
                    <p class="text-box">Email Address: foodbank@email.com <br /> 
                                        Website site/Facebook: www.foodbankwebsite.com <br /> 
                                        Phone Number: 09999 876543 <br /> 
                                        Distribution name</p>
                </div>
                <div class="col-sm-2">
                    <h3>This is a picture(display image depending on string returned</h3>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <h3>Directions for map</h3> <!-- link that sends them to google with their lat and long as a search function-->
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div id="map" style="height: 33.75vw;
                                 width: 60vw;
                                 margin: auto;"></div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-6">
            <h1>Special Notes</h1> <!-- another for each loop that keeps doing <br> for each new item-->
            <p class="text-box">this is some test box about the foodbanks needs</p>
        </div>
        <div class="col-sm-4">
            <h1>Opening hours</h1>
            <p class="text-box">This is where we will have the opening hours displayed</p> <!-- don't know how to display this yet(gotta know the data type-->
        </div>
    </div>



    <!-- Details -->
    <span>
        <b>Name: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Name)
    </span><br/>
    <span>
        <b>Alt Name: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.AltName)
    </span><br/>

    <!-- Location -->
    <span>
        <b>Address: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Address)
    </span><br/>
    <span>
        <b>Country: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Country)
    </span><br/>
    <span>
        <b>Postcode: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Postcode)
    </span><br/>
    <span>
        <b>Lat: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Coord.Y)
    </span><br/>
    <span>
        <b>Lng: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Coord.X)
    </span><br/>

    <!-- Details Contd -->
    <span>
        <b>Phone: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Phone)
    </span><br/>
    <span>
        <b>Secondary Phone: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.SecondaryPhone)
    </span><br/>
    <span>
        <b>Email: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Email)
    </span><br/>
    <span>
        <b>Website: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Homepage)
    </span><br/>
    <span>
        <b>Shopping List: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.ShoppingList)
    </span><br/>
    <span>
        <b>Charity Number: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.CharityNumber)
    </span><br/>
    <span>
        <b>Charity Register: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.CharityRegisterUrl)
    </span><br/>
    <span>
        <b>Network: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Network)
    </span><br/>

    <!-- Notes -->
    <span>
        <b>Notes: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Notes)
    </span><br/>

    <!-- Metadata -->
    <span>
        <b>Protected: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Protected)
    </span><br/>
    <span>
        <b>Slug: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Slug)
    </span><br/>
    <span>
        <b>Status: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Status)
    </span><br/>
    <span>
        <b>Provider: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank.Provider)
    </span><br/>

    <table class="table table-striped table-hover w-100">
        <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Address</th>
            <th scope="col">Phone</th>
            <th scope="col">Action</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Foodbank.Locations)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    Some stuff here
                </td>
            </tr>
        }
        </tbody>
    </table>


    <script type="text/javascript">

        var foodbankIcon = L.icon({
              iconUrl: '/Images/leaf.png',//https://www.flaticon.com/free-icon/leaf_892917?term=leaf&page=1&position=3&page=1&position=3&related_id=892917&origin=tag
              iconSize:     [30, 30],
              iconAnchor:   [0, 30],
              popupAnchor:  [15, -30] // point from which the popup should open relative to the iconAnchor
        });

        var warehouseIcon = L.icon({
              iconUrl: '/Images/warehouse.png',//copy righted dont use for final
              iconSize:     [50, 50],
              iconAnchor:   [25, 50],
              popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
        });

        var map = L.map('map').setView([ 54.596442,  -3.9], 6);

        var featureGroup = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png')
        map.addLayer(featureGroup);

        var geocoder = L.Control.Geocoder.nominatim({
             geocodingQueryParams: {countrycodes: 'gb,im,gg,je'}
        });
        if (typeof URLSearchParams !== 'undefined' && location.search) {
          var params = new URLSearchParams(location.search);
          var geocoderString = params.get('geocoder');
          if (geocoderString && L.Control.Geocoder[geocoderString]) {
            console.log('Using geocoder', geocoderString);
            geocoder = L.Control.Geocoder[geocoderString]();
          } else if (geocoderString) {
            console.warn('Unsupported geocoder', geocoderString);
          }
        }

        L.tileLayer('https://{s}.tile.osm.org/{z}/{x}/{y}.png', {
          attribution: '&copy; <a href="https://osm.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

    </script>
</form>





