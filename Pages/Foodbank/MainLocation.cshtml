@page "{id:int}"
@model MainLocationModel
@{
    ViewData["Title"] = "Main Location";
}
<link rel="stylesheet" href="/css/Control.Geocoder.css"/>
<link rel="stylesheet" href="https://unpkg.com/leaflet@latest/dist/leaflet.css"/>


<div class="text-center ">
    <p>
        Disclaimer: Vouchers may be required to access the bank. <a class="button btn btn-md btn-outline-success" asp-page="/GetHelp/Vouchers">Learn more here.</a>
    </p>
</div>

<form method="post">
    <div class="text-center">
        <h1 class="display-4">
            <b>Main Location Name: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank!.Name)
        </h1>
    </div>

    <div class="container mt-2">
        <div class="row">
            <div class="col-md-4">
                <h3>Address</h3>
                <p class="text-box">
                    <b>Address: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank!.Address) <br/>
                    <b>Postcode: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank!.Postcode) <br/>
                    <b>Country: </b>@Html.DisplayFor(modelItem => modelItem.Foodbank!.Country) <br/>
                </p>
            </div>
            <div class="col-md-4">
                <h3>Contact Infomation</h3>
                <p class="text-box">
                    <b>Phone Number: </b> @Html.DisplayFor(modelItem => modelItem.Foodbank!.Phone) <br/>
                    <b>Email: </b> @Html.DisplayFor(modelItem => modelItem.Foodbank!.Email) <br/>
                    <b>Website: </b> @Html.DisplayFor(modelItem => modelItem.Foodbank!.Homepage) <br/>
                    <b>Network: </b> @Html.DisplayFor(modelItem => modelItem.Foodbank!.Network)
                </p>
            </div>
            <div class="col-md-4">
                @if (Model.Foodbank?.Network == "Trussell Trust")
                {
                    <img class="img-fluid image-box" id="trusselTrust" src="/img/TT-Logo-Rect.png" alt="Trussel Trust Logo"/>
                }
                @if (Model.Foodbank!.Network == "IFAN")
                {
                    <img class="img-fluid image-box" id="IFAN" src="/img/IFAN-Logo.jpg" alt="IFAN Logo"/>
                }
                @if (Model.Foodbank.Network == "Independent")
                {
                    <img class="img-fluid image-box" id="Independent" src="/img/Independent-logo.jpg" alt="Independent Logo"/>
                }
            </div>
        </div>
    </div>


    <div class="container mt-2">
        <div class="row">
            <div class="col-sm-12 text-center">
                <a class="button btn btn-lg btn-outline-success" href="https://maps.google.com/?q= @Model.Foodbank?.Coord!.Y ,@Model.Foodbank?.Coord!.X">Click here for directions</a> <!-- link that sends them to google with their lat and long as a search function-->
            </div>
        </div>
    </div>

    <div class="container mt-2">
        <div class="col-11 d-grid mx-auto">
            <div class="image-box" id="map"></div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-10 d-grid mx-auto">
                <h1>Foodbank Needs</h1>
                <p class="text-box">
                    @if (Model.Foodbank!.Needs?.Count == 0 || Model.Foodbank!.Needs!.All(n => n.NeedStr is null))
                    {
                        @Html.Raw("This foodbank has no needs")
                        <br/>
                    }
                    else
                    {
                        @foreach (var need in Model.Foodbank.Needs!)
                        {
                            @Html.DisplayFor(modelItem => need.NeedStr)
                            <br/>
                        }
                    }
                </p>
            </div>
        </div>
    </div>

    <!-- If its a salvation army then don't do this-->
    @if (Model.Foodbank.Name != "Salvation Army")
    {
        <div class="text-center ">
            <h1 class="display-4">Associated Foodbanks</h1>
        </div>
        <div class="container">
            <table class="table table-striped table-hover w-100 ">
                <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Address</th>
                    <th scope="col">Foodbank</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Model.Foodbank.Locations!)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            <a class="button btn btn-lg btn-outline-success" asp-page="/Foodbank/Index" asp-route-id="@item.LocationId">View foodbank</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="text-center">
            <h1 class="display-4">Associated Foodbanks</h1>
            <h1 id="viewMoreButton" class="button btn btn-lg btn-outline-success col-8 d-grid mx-auto" onclick="showList()">Click here to view places associated with Salvation Army (600+ items)</h1>
        </div>
        <div class="container">
            <table id="salvationArmyList" class="table table-striped table-hover w-100">
                <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Address</th>
                    <th scope="col">Foodbank</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Model.Foodbank.Locations!)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            <a class="button btn btn-lg btn-outline-success" asp-page="/Foodbank/Index" asp-route-id="@item.LocationId">View foodbank</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }

</form>

@section Scripts{
    <script src="https://unpkg.com/leaflet@latest/dist/leaflet-src.js"></script>
    <script src="/js/Control.Geocoder.js"></script>

    <script type="text/javascript">
        const viewMoreButton = document.getElementById('viewMoreButton');
        const salvationArmyList = document.getElementById('salvationArmyList');

        function showList(){
            viewMoreButton.style.display = 'none';
            salvationArmyList.style.display = 'block'
        }

        var warehouseIcon = L.icon({
              iconUrl: '/img/warehouse.png',//copy righted dont use for final
              iconSize:     [50, 50],
              iconAnchor:   [25, 50],
              popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
        });

        var map = L.map('map').setView([ 54.596442,  -3.9], 6);

        var locationMarker = L.marker([@Html.Raw(Model.Foodbank.Coord!.Y),@Html.Raw(Model.Foodbank.Coord.X)], {icon:warehouseIcon}).bindPopup("<a href='https://maps.google.com/?q= @Model.Foodbank?.Coord!.Y, @Model.Foodbank?.Coord!.X'>Click here for directions</a>").addTo(map);

        map.setView([@Html.Raw(Model.Foodbank.Coord.Y),@Html.Raw(Model.Foodbank.Coord.X)], 16);

        var geocoder = L.Control.Geocoder.nominatim({
             geocodingQueryParams: {countrycodes: 'gb,im,gg,je'}
        });
        if (typeof URLSearchParams !== 'undefined' && location.search) {
          var params = new URLSearchParams(location.search);
          var geocoderString = params.get('geocoder');
          if (geocoderString && L.Control.Geocoder[geocoderString]) {
            console.log('Using geocoder', geocoderString);
            geocoder = L.Control.Geocoder[geocoderString]();
          } else if (geocoderString) {
            console.warn('Unsupported geocoder', geocoderString);
          }
        }

        L.tileLayer('https://{s}.tile.osm.org/{z}/{x}/{y}.png', {
          attribution: '&copy; <a href="https://osm.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

    </script>
}