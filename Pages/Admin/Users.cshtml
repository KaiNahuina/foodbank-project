@page
@model UsersModel
@{
    ViewData["Title"] = "Users - Admin";
}

<h1 class="text-start">Users</h1>

<div class="bg-light shadow-lg">
    <div class="p-3 d-flex flex-row align-items-center justify-content-between">
        <div>
            <form method="get" class="d-flex flex-row align-items-center">
                <input class="me-3" placeholder="Search columns..." name="Search" value="@Model.Search"/>
                <button type="submit" class="btn btn-success me-3">Search</button>
            </form>
        </div>
        <div>
            <form method="get" asp-page="./User" asp-route-id="0">
                <button type="submit" name="Action" value="Create" class="btn btn-success">Add New</button>
            </form>
        </div>
        <div class="d-flex flex-row align-items-center justify-content-between">
            @{
                var hasPrev = Model.HasPrevPage ? "" : "disabled";
                var hasNext = Model.HasNextPage ? "" : "disabled";
            }
            <form method="get">
                <input name="OrderBy" type="hidden" value="@Model.OrderBy">
                <input name="OrderDirection" type="hidden" value="@Model.OrderDirection">
                <input name="Search" type="hidden" value="@Model.Search">
                <input name="Page" type="hidden" value="@(Model.Page - 1)">
                <button class="btn btn-success p-2 me-3 @hasPrev">Previous</button>
            </form>
            <form method="get">
                <input name="OrderBy" type="hidden" value="@Model.OrderBy">
                <input name="OrderDirection" type="hidden" value="@Model.OrderDirection">
                <input name="Search" type="hidden" value="@Model.Search">
                <input name="Page" type="hidden" value="@(Model.Page + 1)">
                <button class="btn btn-success p-2 me-3 @hasNext">Next</button>
            </form>
            <span>Page: @Html.DisplayFor(model => model.Page) of @Html.DisplayFor(model => model.MaxPages) - </span>
            <span>Total: @Html.DisplayFor(model => model.TotalItems)</span>
        </div>
    </div>
    <table class="table table-striped table-hover w-100">
        <thead>
        <tr>
            @{
                var direction = Model.OrderDirection == "Asc" ? "Desc" : "Asc";
                var arrow = direction == "Asc" ? "&darr;" : "&uarr;";
            }

            @if (Model.OrderBy == "Name")
            {
                <th scope="col" style="width: 90%;">
                    <a asp-route-Search="@Model.Search" asp-route-OrderBy="Name" asp-route-OrderDirection="@direction">Name @Html.Raw(arrow)</a>
                </th>
            }
            else
            {
                <th scope="col" style="width: 90%;">
                    <a asp-route-Search="@Model.Search" asp-route-OrderBy="Name" asp-route-OrderDirection="Desc">Name</a>
                </th>
            }
            
            <th scope="col" style="width: 100%;">Action</th>

        </tr>
        </thead>
        <tbody>
        @if (Model.Users?.Count != 0)
        {
            @foreach (var item in Model.Users!)
            {
                <tr>
                    <td>
                        @{
                            @Html.DisplayFor(modelItem => item.Email);
                        }
                    </td>
                    <td>
                        <a class="btn btn-primary" asp-page="./User" asp-route-id="@item.Id">Edit</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5">Nothing to display...</td>
            </tr>
        }

        </tbody>
    </table>
</div>