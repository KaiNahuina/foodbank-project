@page
@model IndexModel
@{
    ViewData["Title"] = "Approvals - Admin";
}

<h1 class="text-start">Dashboard</h1>

<div class="bg-light shadow-lg">
    <div class="m-3">
        <h2 class="text-start">Foodbank Requests</h2>
    </div>
    <div class="p-3 d-flex flex-row align-items-center justify-content-between">
        <div>
            <form method="get" class="d-flex flex-row align-items-center">
                <input class="me-3" placeholder="Search columns..." name="Search" value="@Model.Search"/>
                <button type="submit" class="btn btn-success me-3">Search</button>
            </form>
        </div>
        <div class="d-flex flex-row align-items-center justify-content-between ">
            @{
                var hasPrev = Model.HasPrevPage ? "" : "disabled";
                var hasNext = Model.Foodbanks!.Count >= 25 && Model.HasNextPage ? "" : "disabled";
            }
            <form method="get">
                <input name="OrderBy" type="hidden" value="@Model.OrderBy">
                <input name="OrderDirection" type="hidden" value="@Model.OrderDirection">
                <input name="Search" type="hidden" value="@Model.Search">
                <input name="Page" type="hidden" value="@(Model.Page - 1)">
                <button class="btn btn-success p-2 me-3 @hasPrev">Previous</button>
            </form>
            <form method="get">
                <input name="OrderBy" type="hidden" value="@Model.OrderBy">
                <input name="OrderDirection" type="hidden" value="@Model.OrderDirection">
                <input name="Search" type="hidden" value="@Model.Search">
                <input name="Page" type="hidden" value="@(Model.Page + 1)">
                <button class="btn btn-success p-2 me-3 @hasNext">Next</button>
            </form>
            <span>Page: @Html.DisplayFor(model => model.Page) of @Html.DisplayFor(model => model.MaxPages)</span>
        </div>
    </div>
    <table class="table table-striped table-hover w-100">
        <thead>
        <tr>
            @{
                var direction = Model.OrderDirection == "Asc" ? "Desc" : "Asc";
                var arrow = direction == "Asc" ? "&darr;" : "&uarr;";
            }

            @switch (Model.OrderBy)
            {
                case "Name":
                    <th scope="col" style="width: 15%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Name" asp-route-OrderDirection="@direction">Name @Html.Raw(arrow)</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Address" asp-route-OrderDirection="Desc">Address</a>
                    </th>
                    <th scope="col" style="width: 20%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Submitted" asp-route-OrderDirection="Desc">Submitted</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Locations" asp-route-OrderDirection="Desc">Locations</a>
                    </th>
                    break;
                case "Address":
                    <th scope="col" style="width: 15%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Name" asp-route-OrderDirection="Desc">Name</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Address" asp-route-OrderDirection="@direction">Address @Html.Raw(arrow)</a>
                    </th>
                    <th scope="col" style="width: 20%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Submitted" asp-route-OrderDirection="Desc">Submitted</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Locations" asp-route-OrderDirection="Desc">Locations</a>
                    </th>
                    break;
                case "Submitted":
                    <th scope="col" style="width: 15%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Name" asp-route-OrderDirection="Desc">Name</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Address" asp-route-OrderDirection="Desc">Address</a>
                    </th>
                    <th scope="col" style="width: 20%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Submitted" asp-route-OrderDirection="@direction">Submitted @Html.Raw(arrow)</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Locations" asp-route-OrderDirection="Desc">Locations</a>
                    </th>
                    break;
                case "Locations":
                    <th scope="col" style="width: 15%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Name" asp-route-OrderDirection="Desc">Name</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Address" asp-route-OrderDirection="Desc">Address</a>
                    </th>
                    <th scope="col" style="width: 20%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Submitted" asp-route-OrderDirection="Desc">Submitted</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Locations" asp-route-OrderDirection="@direction">Locations @Html.Raw(arrow)</a>
                    </th>
                    break;
                default:
                    <th scope="col" style="width: 15%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Name" asp-route-OrderDirection="Desc">Name</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Address" asp-route-OrderDirection="Desc">Address</a>
                    </th>
                    <th scope="col" style="width: 20%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Submitted" asp-route-OrderDirection="Desc">Submitted</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Locations" asp-route-OrderDirection="Desc">Locations</a>
                    </th>
                    break;
            }
            <th scope="col" style="width: 100%;">Action</th>

        </tr>
        </thead>
        <tbody>
        @if (Model.Foodbanks?.Count != 0 && Model.Foodbanks is not null)
        {
            foreach (var item in Model.Foodbanks!)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Locations!.Count)
                    </td>
                    <td>
                        <form method="post" asp-page="/Admin/Foodbank" asp-route-id="@item.FoodbankId" class="d-flex flex-row">
                            <button class="btn btn-success" name="Action" value="Approve" type="submit">Approve</button>
                            <button class="btn btn-danger" name="Action" value="Deny" type="submit">Deny</button>
                            <a asp-page="./Foodbank" class="btn btn-primary" asp-route-id="@item.FoodbankId">View</a>
                        </form>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5">Nothing to display...</td>
            </tr>
        }

        </tbody>
    </table>
</div>

<div class="mt-3 bg-light shadow-lg">
    <div class="m-3">
        <h2 class="text-start">Recipe Requests</h2>
    </div>
    <div class="p-3 d-flex flex-row align-items-center justify-content-between">
        <div>
            <form method="get" class="d-flex flex-row align-items-center">
                <input class="me-3" placeholder="Search columns..." name="Search" value="@Model.Search"/>
                <button type="submit" class="btn btn-success me-3">Search</button>
            </form>
        </div>
        <div class="d-flex flex-row align-items-center justify-content-between ">
            @{
                var hasPrev2 = Model.HasPrevPage ? "" : "disabled";
                var hasNext2 = Model.Recipes!.Count >= 25 && Model.HasNextPage ? "" : "disabled";
            }
            <form method="get">
                <input name="OrderBy" type="hidden" value="@Model.OrderBy">
                <input name="OrderDirection" type="hidden" value="@Model.OrderDirection">
                <input name="Search" type="hidden" value="@Model.Search">
                <input name="Page" type="hidden" value="@(Model.Page - 1)">
                <button class="btn btn-success p-2 me-3 @hasPrev2">Previous</button>
            </form>
            <form method="get">
                <input name="OrderBy" type="hidden" value="@Model.OrderBy">
                <input name="OrderDirection" type="hidden" value="@Model.OrderDirection">
                <input name="Search" type="hidden" value="@Model.Search">
                <input name="Page" type="hidden" value="@(Model.Page + 1)">
                <button class="btn btn-success p-2 me-3 @hasNext2">Next</button>
            </form>
            <span>Page: @Html.DisplayFor(model => model.Page) of @Html.DisplayFor(model => model.MaxPages)</span>
        </div>
    </div>
    <table class="table table-striped table-hover w-100">
        <thead>
        <tr>
            @{
                direction = Model.OrderDirection == "Asc" ? "Desc" : "Asc";
                arrow = direction == "Asc" ? "&darr;" : "&uarr;";
            }

            @switch (Model.OrderBy)
            {
                case "Name":
                    <th scope="col" style="width: 15%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Name" asp-route-OrderDirection="@direction">Name @Html.Raw(arrow)</a>
                    </th>
                    <th scope="col" style="width: 50%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Method" asp-route-OrderDirection="Desc">Method</a>
                    </th>
                    <th scope="col" style="width: 20%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Ingredients" asp-route-OrderDirection="Desc">Ingredients</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Notes" asp-route-OrderDirection="Desc">Notes</a>
                    </th>
                    break;
                case "Method":
                    <th scope="col" style="width: 15%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Name" asp-route-OrderDirection="Desc">Name</a>
                    </th>
                    <th scope="col" style="width: 50%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Method" asp-route-OrderDirection="@direction">Method @Html.Raw(arrow)</a>
                    </th>
                    <th scope="col" style="width: 20%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Ingredients" asp-route-OrderDirection="Desc">Ingredients</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Notes" asp-route-OrderDirection="Desc">Notes</a>
                    </th>
                    break;
                case "Ingredients":
                    <th scope="col" style="width: 15%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Name" asp-route-OrderDirection="Desc">Name</a>
                    </th>
                    <th scope="col" style="width: 50%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Method" asp-route-OrderDirection="Desc">Method</a>
                    </th>
                    <th scope="col" style="width: 20%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Ingredients" asp-route-OrderDirection="@direction">Ingredients @Html.Raw(arrow)</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Notes" asp-route-OrderDirection="Desc">Notes</a>
                    </th>
                    break;
                case "Notes":
                    <th scope="col" style="width: 15%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Name" asp-route-OrderDirection="Desc">Name</a>
                    </th>
                    <th scope="col" style="width: 50%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Method" asp-route-OrderDirection="Desc">Method</a>
                    </th>
                    <th scope="col" style="width: 20%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Ingredients" asp-route-OrderDirection="Desc">Ingredients</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Notes" asp-route-OrderDirection="@direction">Notes @Html.Raw(arrow)</a>
                    </th>
                    break;
                default:
                    <th scope="col" style="width: 15%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Name" asp-route-OrderDirection="Desc">Name</a>
                    </th>
                    <th scope="col" style="width: 50%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Method" asp-route-OrderDirection="Desc">Method</a>
                    </th>
                    <th scope="col" style="width: 20%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Ingredients" asp-route-OrderDirection="Desc">Ingredients</a>
                    </th>
                    <th scope="col" style="width: 35%;">
                        <a asp-route-Search="@Model.Search" asp-route-OrderBy="Notes" asp-route-OrderDirection="Desc">Notes</a>
                    </th>
                    break;
            }
            <th scope="col" style="width: 100%;">Action</th>

        </tr>
        </thead>
        <tbody>
        @if (Model.Recipes?.Count != 0 && Model.Recipes is not null)
        {
            foreach (var item in Model.Recipes!)
            {
                <tr>
                    <td>
                        @{
                            item.Name = Model.TrimBlob(item.Name);
                            @Html.DisplayFor(modelItem => item.Name)
                        }
                    </td>
                    <td>
                        @{
                            item.Ingredients = Model.TrimBlob(item.Ingredients);
                            @Html.DisplayFor(modelItem => item.Ingredients)
                        }
                    </td>
                    <td>
                        @{
                            item.Method = Model.TrimBlob(item.Method);
                            @Html.DisplayFor(modelItem => item.Method)
                        }
                    </td>
                    <td>
                        @{
                            item.Notes = Model.TrimBlob(item.Notes);
                            @Html.DisplayFor(modelItem => item.Notes)
                        }
                    </td>
                    <td>
                        <form method="post" asp-page="/Admin/Recipe" asp-route-id="@item.RecipeId" class="d-flex flex-row">
                            <button class="btn btn-success" name="Action" value="Approve" type="submit">Approve</button>
                            <button class="btn btn-danger" name="Action" value="Deny" type="submit">Deny</button>
                            <a asp-page="./Recipe" class="btn btn-primary" asp-route-id="@item.RecipeId">View</a>
                        </form>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5">Nothing to display...</td>
            </tr>
        }

        </tbody>
    </table>
</div>