@page "{id}"
@using Foodbank_Project.Models
@model UserModel
@{
    ViewData["Title"] = "User - Admin";
}

@if (Model.Action != "Create")
{
    <h1 class="text-start">Edit User</h1>
}
else
{
    <h1 class="text-start">Create User</h1>
}

<div class="flex-fill bg-white shadow-lg p-3">

    @* Info *@
    <form method="post" class="container" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row">
            <div class="col">
                <label asp-for="Email"></label>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="col-8">
                <input class="form-control" value="@Model.Email" asp-for="Email"/><br/>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <label asp-for="Password"></label>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="col-8">
                <input class="form-control" asp-for="Password"/><br/>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <label asp-for="Locked"></label>
                <span asp-validation-for="Locked" class="text-danger"></span>
            </div>
            <div class="col-8 form-control-lg form-check form-switch d-flex justify-content-center">
                <input class="form-check-input" placeholder="@Model.Locked" asp-for="Locked"/><br/>
            </div>
        </div>


        <div class="d-flex justify-content-end flex-row ">
            @if (Model.Action == "Create")
            {
                <button name="Action" value="Create" type="submit" class="btn btn-success me-3">Create</button>
                <a asp-page="./Recipes"><button class="btn btn-primary" type="button">Cancel</button></a>
            }
            else
            {
                <button name="Action" value="Update" type="submit" class="btn btn-success me-3">Save</button>
                <button name="Action" formnovalidate value="Delete" type="submit" class="btn btn-danger me-3">Delete</button>
                <a asp-page="./Users"><button class="btn btn-primary" type="button">Cancel</button></a>
            }
        </div>

    </form>

@if(Model.Action != "Create"){
    <h1 class="text-start" id="categories">Roles</h1>

    <div class="bg-light shadow-lg" id="needs">
        <div class="p-3 d-flex flex-row align-items-center justify-content-between">
            <div>
                <form method="get" class="d-flex flex-row align-items-center" asp-fragment="needs">
                    <input class="me-3" placeholder="Search columns..." name="Search" value="@Model.Search"/>
                    <button type="submit" class="btn btn-success me-3">Search</button>
                </form>
            </div>
            <div>
                <form method="get" asp-page="./RecipeCategory" asp-route-id="0" asp-fragment="needs">
                    <input type="hidden" name="Target" value="@Model.Id"/>
                    <button type="submit" class="btn btn-success">Add New</button>
                </form>
            </div>
            <div class="d-flex flex-row align-items-center justify-content-between">
                @{
                    var hasPrev = Model.HasPrevPage ? "" : "disabled";
                    var hasNext = Model.HasNextPage ? "" : "disabled";
                }
                <form method="get" asp-fragment="needs">
                    <input name="OrderBy" type="hidden" value="@Model.OrderBy">
                    <input name="OrderDirection" type="hidden" value="@Model.OrderDirection">
                    <input name="Search" type="hidden" value="@Model.Search">
                    <input name="Page" type="hidden" value="@(Model.Page - 1)">
                    <button class="btn btn-success p-2 me-3 @hasPrev">Previous</button>
                </form>
                <form method="get" asp-fragment="needs">
                    <input name="OrderBy" type="hidden" value="@Model.OrderBy">
                    <input name="OrderDirection" type="hidden" value="@Model.OrderDirection">
                    <input name="Search" type="hidden" value="@Model.Search">
                    <input name="Page" type="hidden" value="@(Model.Page + 1)">
                    <button class="btn btn-success p-2 me-3 @hasNext">Next</button>
                </form>
                <span>Page: @Html.DisplayFor(model => model.Page) of @Html.DisplayFor(model => model.MaxPages) - </span>
                <span>Total: @Html.DisplayFor(model => model.TotalItems)</span>
            </div>
        </div>
        <table class="table table-striped table-hover w-100">
            <thead>
            <tr>
                @{
                    var direction = Model.OrderDirection == "Asc" ? "Desc" : "Asc";
                    var arrow = direction == "Asc" ? "&darr;" : "&uarr;";
                }

                @switch (Model.OrderBy)
                {
                    case "Name":
                        <th scope="col" style="width: 100%;">
                            <a asp-route-Search="@Model.Search" asp-fragment="needs" asp-route-OrderBy="Name" asp-route-OrderDirection="@direction">Name @Html.Raw(arrow)</a>
                        </th>
                        break;
                    default:
                        <th scope="col" style="width: 100%;">
                            <a asp-route-Search="@Model.Search" asp-fragment="needs" asp-route-OrderBy="Name" asp-route-OrderDirection="Desc">Name</a>
                        </th>
                        break;
                }
                <th scope="col" style="width: 100%;">Action</th>

            </tr>
            </thead>
            <tbody>
            @{
                if (Model.Roles?.Count != 0 && Model.Roles is not null)
                {
                    foreach (var item in Model.Roles)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item)
                            </td>
                            <td>
                                <form method="post" asp-page="./RecipeCategory" asp-route-id="@item">
                                    <input type="hidden" name="Target" value="@Model.Id"/>
                                    <button type="submit" name="Action" value="Remove" class="btn btn-danger">Remove</button>
                                </form>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">Nothing to display...</td>
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>
    }
</div>

@section Scripts
{<partial name="_ValidationScriptsPartial"/>}