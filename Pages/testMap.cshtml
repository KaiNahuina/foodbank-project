@page
@model Foodbank_Project.Pages.testMapModel
@{
}

<link rel="stylesheet" href="https://unpkg.com/leaflet@latest/dist/leaflet.css" />
<link rel="stylesheet" href="~/css/Control.Geocoder.css" />

<script src="https://unpkg.com/leaflet@latest/dist/leaflet-src.js"></script>
<script src="~/js/Control.Geocoder.js"></script> 



<!-- Credit Leaflet, open street map, novatim, leaflet search controll -->

<div id="map"></div>

    <script type="text/javascript">
      var map = L.map('map').setView([0, 0], 2);

      var marker2 = L.marker([51.5, -0.09]).addTo(map);         //marker point

      var geocoder = L.Control.Geocoder.nominatim();            //the type of geocoder used 
      if (typeof URLSearchParams !== 'undefined' && location.search) {
        // parse /?geocoder=nominatim from URL
        var params = new URLSearchParams(location.search);
        var geocoderString = params.get('geocoder');
        if (geocoderString && L.Control.Geocoder[geocoderString]) {
          console.log('Using geocoder', geocoderString);
          geocoder = L.Control.Geocoder[geocoderString]();
        } else if (geocoderString) {
          console.warn('Unsupported geocoder', geocoderString);
        }
      }

      var control = L.Control.geocoder({  //set the geocoder search type
        query: 'Moon',
        placeholder: 'Search here...',
        geocoder: geocoder
      })
      .on('markgeocode', function(e) {
        console.log(e);
        console.log(e.geocode.center.lat);          //outputs the latitude 
        console.log(e.geocode.center.lng);          //outputs the longitude
 
      })
      .addTo(map);
      var marker;

      L.tileLayer('https://{s}.tile.osm.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://osm.org/copyright">OpenStreetMap</a> contributors'
      }).addTo(map);

      map.on('click', function(e) {
        geocoder.reverse(e.latlng, map.options.crs.scale(map.getZoom()), function(results) {
          var r = results[0];
          if (r) {
            if (marker) {
              marker
                .setLatLng(r.center)
                .setPopupContent(r.html || r.name)
                .openPopup();
            } else {
              marker = L.marker(r.center)
                .bindPopup(r.name)
                .addTo(map)
                .openPopup();
            }
          }
        });
      });
    </script>