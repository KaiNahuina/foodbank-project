@page "{Location?}"
@model Foodbank_Project.Pages.testMapModel
@{
}
<link rel="stylesheet" href="~/css/Control.Geocoder.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet@latest/dist/leaflet.css" />


<script src="https://unpkg.com/leaflet@latest/dist/leaflet-src.js"></script>
<script src="~/js/Control.Geocoder.js"></script> 


<!-- Credit Leaflet, open street map, nomiatim, leaflet search controll -->
<div class="container">
    <div class="row">
        <div class="col col-4">
            <p> </p>
        </div>
        <div class="col col-5">
            <form >
                <div class="mb-3">
                    <label for="searchFoodbank" class="form-label">Find your nearest Foodbank</label>
                    <input type="text" class="form-control" value="@RouteData.Values["Location"]" id="searchFoodbank" placeholder="Enter postcode" aria-describedby="searchBank" />
                    <div id="searchBank" class="form-text"></div>  <!-- we need to save this and push it to the map-->
                </div>
                <button type="submit" class="btn btn-primary">Search</button>
                @Html.AntiForgeryToken()
            </form>
        </div>
    </div>
</div>

<div id="map"></div>

<script type="text/javascript">

    var userInputForLocation = document.getElementById('searchFoodbank').value;
    console.log(userInputForLocation); //if we give this data before the page loads it should display the corret infomation

    
    
    var foodbankIcon = L.icon({
          iconUrl: '/Images/leaf.png',//https://www.flaticon.com/free-icon/leaf_892917?term=leaf&page=1&position=3&page=1&position=3&related_id=892917&origin=tag

          iconSize:     [30, 30], 
          iconAnchor:   [0, 30], 
          popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
    });

    var warehouseIcon = L.icon({
          iconUrl: '/Images/warehouse.png',//copy righted dont use for final

          iconSize:     [50, 50], 
          iconAnchor:   [25, 50], 
          popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
    });

    var map = L.map('map').setView([ 54.596442,  -3.9], 6);
  
    var marker2 = L.marker([51.5, -0.09], {icon:foodbankIcon}).addTo(map).bindPopup('THIS IS THE FOODBANK');         //marker point    these need to have alt text aswell

    var marker3 = L.marker([51.5, -1], {icon:warehouseIcon}).addTo(map).bindPopup('THIS IS THE WAREHOUSE');         //marker point    these need to have alt text aswell
      
      //var top5closest1 = L.marker([this.long, this.lat]).addTo(map);         //not sure how to do this yet 
      
        
    map.locate({setView: true, maxZoom: 14});       //allow permission to locate you on the page, press the lock in the top right and reset permission to get back to the view(NEED TO MAKE IT REQUEST EACH TIME ?)

    var geocoder = L.Control.Geocoder.nominatim();            //the type of geocoder used 
    if (typeof URLSearchParams !== 'undefined' && location.search) {
        // parse /?geocoder=nominatim from URL
      var params = new URLSearchParams(location.search);
      var geocoderString = params.get('geocoder');
      if (geocoderString && L.Control.Geocoder[geocoderString]) {
        console.log('Using geocoder', geocoderString);
        geocoder = L.Control.Geocoder[geocoderString]();
      } else if (geocoderString) {
        console.warn('Unsupported geocoder', geocoderString);
      }
    }



    var control = L.Control.geocoder({  //set the geocoder search type
       query: userInputForLocation,   //we will need this to input our own data
                            //we need to type a call back function to input
      placeholder: 'Search Postcode or Address',
      geocoder: geocoder  //this tells use the standard of searching
    })
    .on('markgeocode', function(e) {
      var usersLatitude = e.geocode.center.lat;
      var usersLongitude = e.geocode.center.lng;
      console.log(JSON.stringify({Lat: usersLatitude, Lng: usersLongitude}));

      $.ajax({
          type: "POST",         //on post gets us a return but on get doesnt 
          url: '/testMap?handler=Coord',
          data: JSON.stringify({Lat: usersLatitude, Lng: usersLongitude}),
          contentType: "application/json; charset=utf-8",

          beforeSend: function(xhr){
              xhr.setRequestHeader("RequestVerificationToken", $('input[name="__RequestVerificationToken"]').val());            //debug wont write if this isnt here
          },
          

          dataType: 'json',
          success: function (result){
             alert("We are trying to return something");
             alert("This is the data returned" + result)

             for(var i =0; i < result.list.length; i++){
                 alert(result.list[i].point);
             }
          },
          error: function(xhr, status, err) {
              alert("We weren't unable to return any data")
              alert(err.toString(), 'Error - LoadListItemsHelper');
          }
          //window.alert("This is the data returned" + data.toString())
      });
    })
    .addTo(map);
    var marker;                                   //need to control the ammount it zooms in 

    geocoder.geocode(userInputForLocation, function(ctx){control._geocodeResultSelected(ctx[0])})

    L.tileLayer('https://{s}.tile.osm.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://osm.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

</script>