default:
  tags:
    - docker

include:
  - template: Auto-DevOps.gitlab-ci.yml

variables:
  CODE_QUALITY_DISABLED: disable # disbaled due to unprivliged docker > not able to run DIND
  BROWSER_PERFORMANCE_DISABLED: enable # disbaled due to unprivliged docker > not able to run DIND
  CI_COMMIT_BRANCH: $CI_COMMIT_REF_SLUG

security-code-scan-sast:
  before_script:
    - wget https://dot.net/v1/dotnet-install.sh
    - bash ./dotnet-install.sh -c 6.0

build_docker:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  script:
    - |
      if [[ -z "$CI_COMMIT_TAG" ]]; then
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
      else
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
      fi
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "$CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG"
      --destination "$CI_APPLICATION_REPOSITORY:latest"
      --use-new-run # experimental
      --snapshotMode=redo # experimental

build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:6.0
  services:
    -
  script:
    - dotnet restore
    - dotnet publish "Foodbank Project.csproj" -c debug -r win-x64 --self-contained --no-restore
    - dotnet publish "Foodbank Project.csproj" -c debug -r linux-x64 --self-contained --no-restore
    - dotnet publish "Foodbank Project.csproj" -c release -r win-x64 --self-contained --no-restore
    - dotnet publish "Foodbank Project.csproj" -c release -r linux-x64 --self-contained --no-restore
    #- apt-get update
    #- apt-get install -y zip
    #- mkdir -p bin/final
    #- zip -r bin/final/foodbank_proj-$CI_COMMIT_REF_SLUG-debug-win-x64.zip bin/debug/net6.0/win-x64 
    #- zip -r bin/final/foodbank_proj-$CI_COMMIT_REF_SLUG-debug-linux-x64.zip bin/debug/net6.0/linux-x64 
    #- zip -r bin/final/foodbank_proj-$CI_COMMIT_REF_SLUG-release-win-x64.zip bin/release/net6.0/win-x64 
    #- zip -r bin/final/foodbank_proj-$CI_COMMIT_REF_SLUG-release-linux-x64.zip bin/release/net6.0/linux-x64 

    #artifacts:
    #   paths:
    #      - bin/final

test:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:6.0
  services:
    -
  script:
    - dotnet restore
    - mkdir -p bin/tests
    - dotnet test --test-adapter-path:. --no-restore --logger:"junit;LogFilePath=bin/tests/test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
  artifacts:
    when: always
    paths:
      - 'Foodbank Project Tests/bin/tests/test-result.xml'
    reports:
      junit:
        - 'Foodbank Project Tests/bin/tests/test-result.xml'